#include <esp_wifi.h>


esp_wifi_set_ps(WIFI_PS_NONE);


int32_t getWiFiChannel(const char *ssid) {
  if (int32_t n = WiFi.scanNetworks()) {
      for (uint8_t i=0; i<n; i++) {
          if (!strcmp(ssid, WiFi.SSID(i).c_str())) {
              return WiFi.channel(i);
          }
      }
  }
  return 0;
}

int32_t channel = getWiFiChannel(WIFI_SSID);
esp_wifi_set_channel(channel, WIFI_SECOND_CHAN_NONE);



int32_t channel = getWiFiChannel(WIFI_SSID);

WiFi.printDiag(Serial); // Uncomment to verify channel number before
esp_wifi_set_promiscuous(true);
esp_wifi_set_channel(channel, WIFI_SECOND_CHAN_NONE);
esp_wifi_set_promiscuous(false);
WiFi.printDiag(Serial); // Uncomment to verify channel change after

uint8_t inteiroParaHexadecimal(uint8_t valor) {
    // Use a função sprintf para formatar o valor em hexadecimal com o prefixo "0x"
    char buffer[5];  // 5 caracteres são suficientes para armazenar "0x" e dois dígitos hexadecimais, mais o caractere nulo
    sprintf(buffer, "0x%02X", valor);

    // Use a função sscanf para converter a string de volta para um valor hexadecimal
    uint8_t resultado;
    sscanf(buffer, "%hhX", &resultado);

    return resultado;
}
